name: dist
on:
  push:
    branches: [ main ]

permissions:
  contents: write

jobs:
  native_build:
    strategy:
      matrix:
        os: [ "ubuntu", "windows", "macos" ]
    runs-on: ${{ matrix.os }}-latest
    steps:
      - uses: actions/checkout@v3
      - uses: graalvm/setup-graalvm@v1
        with:
          version: 'latest'
          java-version: '17'
          distribution: 'graalvm-community'
          components: 'native-image'
          github-token: ${{ secrets.GITHUB_TOKEN }}
      - run: ./gradlew nativeCompile
      - name: Upload binary
        uses: actions/upload-artifact@v2
        with:
          name: native-${{ matrix.os }}
          path: build/native/nativeCompile

  javapackage:
    strategy:
      matrix:
        os: [ "ubuntu", "windows", "macos" ]
    runs-on: ${{ matrix.os }}-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
      - run: ./gradlew javapackage
      - name: Upload binary
        uses: actions/upload-artifact@v2
        with:
          name: javapackage-${{ matrix.os }}
          path: build/javapackage

  java:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
      - run: ./gradlew assemble
      - name: Upload binary
        uses: actions/upload-artifact@v2
        with:
          name: java
          path: build/libs

  dist:
    needs: [ native_build, javapackage, java ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Download Native Linux artifact
        uses: actions/download-artifact@v2
        with:
          name: native-ubuntu
          path: artifacts/native/ubuntu
      - name: Download Native Windows artifact
        uses: actions/download-artifact@v2
        with:
          name: native-windows
          path: artifacts/native/windows
      - name: Download Native Macos artifact
        uses: actions/download-artifact@v2
        with:
          name: native-macos
          path: artifacts/native/macos

      - name: Download Java Package Linux artifact
        uses: actions/download-artifact@v2
        with:
          name: javapackage-ubuntu
          path: artifacts/javapackage/ubuntu
      - name: Download Java Package Windows artifact
        uses: actions/download-artifact@v2
        with:
          name: javapackage-windows
          path: artifacts/javapackage/windows
      - name: Download Java Package Macos artifact
        uses: actions/download-artifact@v2
        with:
          name: javapackage-macos
          path: artifacts/javapackage/macos

      - name: Download Java artifact
        uses: actions/download-artifact@v2
        with:
          name: java
          path: artifacts/java

      - name: release
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          SHORT=$(git rev-parse --short $GITHUB_SHA)
          mv artifacts/native/ubuntu/portforward artifacts/native-ubuntu
          mv artifacts/native/windows/portforward.exe artifacts/native-windows.exe
          mv artifacts/native/macos/portforward artifacts/native-macos
          
          zip -r artifacts/javapackage-ubuntu.zip artifacts/javapackage/ubuntu/portforward
          zip -r artifacts/javapackage-windows.zip artifacts/javapackage/windows/portforward
          zip -r artifacts/javapackage-macos.zip artifacts/javapackage/macos/portforward
          
          gh release create $SHORT --target $GITHUB_SHA \
            artifacts/native-ubuntu \
            artifacts/native-windows.exe \
            artifacts/native-macos \
            artifacts/javapackage-ubuntu.zip \
            artifacts/javapackage-windows.zip \
            artifacts/javapackage-macos.zip \
            artifacts/java/portforward.jar \
            artifacts/javapackage/ubuntu/portforward.AppImage
